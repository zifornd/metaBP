/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {
    //default: do not publish into the results folder
    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        enabled: false
    ]

    withName: FASTQC_RAW {
        args = '--quiet'
        publishDir = [
            path: { "${params.outdir}/Intermediate_Outputs/FastQC" },
            mode: params.publish_dir_mode,
            pattern: "*.html"
        ]
    }
    withName: CUTADAPT {
        ext.args = [
            "-q ${params.cutadapt_quality_cutoff}",
            "-m ${params.cutadapt_min_read_length}",
            "-e ${params.cutadapt_max_error_rate}"
        ].join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/Intermediate_Outputs/Cutadapt" },
            mode: params.publish_dir_mode,
            pattern: "*.log"
        ]
        ext.prefix = ".cutadapt"
    }
    withName: TRIMMOMATIC {
        ext.args = [
            "ILLUMINACLIP:${params.trimmomatic_illuminaclip}",
            "SLIDINGWINDOW:${params.trimmomatic_sliding_window}",
            "MINLEN:${params.trimmomatic_min_length}"
        ].join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/Intermediate_Outputs/Trimmomatic" },
            mode: params.publish_dir_mode,
            pattern: "*.log"
        ]
        ext.prefix = ".trimmomatic"
    }
    withName: BOWTIE2_HOST_REMOVAL_ALIGN_CUTADAPT {
        publishDir = [
            path: { "${params.outdir}/Intermediate_Outputs/Host_Removal" },
            mode: params.publish_dir_mode,
            pattern: "*.{log,read_ids.txt}"
        ]
        ext.prefix = "host_removed"
    }
    withName: BOWTIE2_HOST_REMOVAL_ALIGN_TRIMMOMATIC {
        ext.args = params.host_removal_verysensitive ? "--very-sensitive" : "--sensitive"
        publishDir = [
            path: { "${params.outdir}/Intermediate_Outputs/Host_Removal" },
            mode: params.publish_dir_mode,
            pattern: "*.{log,read_ids.txt}"
        ]
        ext.prefix = "host_removed"
    }
    withName: BOWTIE2_PHIX_REMOVAL_ALIGN_CUTADAPT {
        publishDir = [
            path: { "${params.outdir}/Intermediate_Outputs/Host_Removal" },
            mode: params.publish_dir_mode,
            pattern: "*.{log,read_ids.txt}"
        ]
        ext.prefix = "phix_removed"
    }
    withName: BOWTIE2_PHIX_REMOVAL_ALIGN_TRIMMOMATIC {
        publishDir = [
            path: { "${params.outdir}/Intermediate_Outputs/Host_Removal" },
            mode: params.publish_dir_mode,
            pattern: "*.{log,read_ids.txt}"
        ]
        ext.prefix = "phix_removed"
    }
	
	withName: BUSCO_DB_PREPARATION {
        publishDir = [
            path: { "${params.outdir}/Intermediate_Outputs/BUSCO" },
            mode: params.publish_dir_mode,
            pattern: "*.tar.gz"
        ]
    }

	withName: BUSCO_CUTADAPT_SPADES {
        publishDir = [
            path: { "${params.outdir}/Intermediate_Outputs/BUSCO/SPAdes" },
            mode: params.publish_dir_mode
        ]
    }
	
    withName: BUSCO_TRIMMOMATIC_SPADES {
        publishDir = [
            path: { "${params.outdir}/Intermediate_Outputs/BUSCO/SPAdes" },
            mode: params.publish_dir_mode
        ]
    }
	
	withName: BUSCO_CUTADAPT_MEGAHIT {
        publishDir = [
            path: { "${params.outdir}/Intermediate_Outputs/BUSCO/MEGAHIT" },
            mode: params.publish_dir_mode
        ]
    }
	
	withName: BUSCO_TRIMMOMATIC_MEGAHIT {
        publishDir = [
            path: { "${params.outdir}/Intermediate_Outputs/BUSCO/MEGAHIT" },
            mode: params.publish_dir_mode
        ]
    }
		
	withName: BUSCO_SAVE_DOWNLOAD {
        publishDir = [
            path: { "${params.outdir}/Intermediate_Outputs/BUSCO" },
            mode: params.publish_dir_mode
        ]
    }
	
	withName: BUSCO_PLOT_CUTADAPT {
        publishDir = [
            path: { "${params.outdir}/Intermediate_Outputs/BUSCO" },
            mode: params.publish_dir_mode
        ]
    }
	
	withName: BUSCO_PLOT_TRIMMOMATIC {
        publishDir = [
            path: { "${params.outdir}/Intermediate_Outputs/BUSCO" },
            mode: params.publish_dir_mode
        ]
    }
	
	withName: BUSCO_SUMMARY_CUTADAPT_SPADES {
        publishDir = [
            path: { "${params.outdir}/Intermediate_Outputs/BUSCO" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
		ext.prefix = "Cutadapt-SPAdes"
		
    }
	withName: BUSCO_SUMMARY_CUTADAPT_MEGAHIT {
        publishDir = [
            path: { "${params.outdir}/Intermediate_Outputs/BUSCO" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.prefix = "Cutadapt_MEGAHIT"
		
		
    }

    withName: BUSCO_SUMMARY_TRIMMOMATIC_SPADES {
        publishDir = [
            path: { "${params.outdir}/Intermediate_Outputs/BUSCO" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
		 ext.prefix = "Trimmomatic-SPAdes"
		
    }
	
	withName: BUSCO_SUMMARY_TRIMMOMATIC_MEGAHIT {
        publishDir = [
            path: { "${params.outdir}/Intermediate_Outputs/BUSCO" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
		 ext.prefix = "Trimmomatic-MEGAHIT"
		
    }
	
	
    withName: MULTIQC {
        ext.args   = ""
        publishDir = [
            path: { "${params.outdir}/Multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }
	

	withName: KRAKEN2_CUTADAPT {
        publishDir = [
            path: { "${params.outdir}/Results/Kraken2/Cutadapt" },
            mode: params.publish_dir_mode,
            pattern: "*.txt"
        ]
	}
	withName: KRAKEN2_TRIMMOMATIC {
        publishDir = [
            path: { "${params.outdir}/Results/Kraken2/Trimmomatic" },
            mode: params.publish_dir_mode,
            pattern: "*.txt"
        ]
	}
	withName: KRONA_CUTADAPT {
        publishDir = [
            path: { "${params.outdir}/Results/Krona/Cutadapt" },
            mode: params.publish_dir_mode,
            pattern: "*.html"
        ]
    }
	withName: KRONA_TRIMMOMATIC {
        publishDir = [
            path: { "${params.outdir}/Results/Krona/Trimmomatic" },
            mode: params.publish_dir_mode,
            pattern: "*.html"
        ]
    }
	
	withName: BOWTIE2_ASSEMBLY_ALIGN {
        publishDir = [
            path: { "${params.outdir}/Intermediate_Outputs" },
            mode: params.publish_dir_mode,
            pattern: "*.log"
        ]
    }
	
	//pattern: "*.{fa.gz,log}" //'pattern' didnt work, probably because the output is in a folder, solved with 'saveAs'
    withName: MEGAHIT_CUTADAPT {
        publishDir = [
            path: { "${params.outdir}/Intermediate_Outputs/MEGAHIT/Cutadapt" },
            mode: params.publish_dir_mode,
            saveAs: {
                filename -> filename.equals('versions.yml') ? null :
                filename.indexOf('.contigs.fa.gz') > 0      ? filename :
                filename.indexOf('.log') > 0                ? filename : null }
        ]
    }

	withName: MEGAHIT_TRIMMOMATIC {
        publishDir = [
            path: { "${params.outdir}/Intermediate_Outputs/MEGAHIT/Cutadapt" },
            mode: params.publish_dir_mode,
            saveAs: {
                filename -> filename.equals('versions.yml') ? null :
                filename.indexOf('.contigs.fa.gz') > 0      ? filename :
                filename.indexOf('.log') > 0                ? filename : null }
        ]
    }
	
	withName: SPADES_CUTADAPT {
        publishDir = [
            path: { "${params.outdir}/Intermediate_Outputs/SPAdes/Cutadapt" },
            mode: params.publish_dir_mode,
            pattern: "*.{fasta.gz,gfa.gz,log}"
        ]
    }
	
	withName: SPADES_TRIMMOMATIC {
        publishDir = [
            path: { "${params.outdir}/Intermediate_Outputs/SPAdes/Trimmomatic" },
            mode: params.publish_dir_mode,
            pattern: "*.{fasta.gz,gfa.gz,log}"
        ]
    }
	
	withName: QUAST_BINS_CUTADAPT_SPADES {
        publishDir = [
            path: { "${params.outdir}/Intermediate_Outputs" },
            mode: params.publish_dir_mode
        ]
    }
	
	withName: QUAST_BINS_SUMMARY_CUTADAPT_SPADES {
        publishDir = [
            path: { "${params.outdir}/Intermediate_Outputs" },
            mode: params.publish_dir_mode,
			saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
		ext.prefix = "Cutadapt-SPAdes"
    }
	
	withName: QUAST_BINS_TRIMMOMATIC_SPADES {
        publishDir = [
            path: { "${params.outdir}/Intermediate_Outputs" },
            mode: params.publish_dir_mode
        ]
    }
	
	withName: QUAST_BINS_SUMMARY_TRIMMOMATIC_SPADES {
        publishDir = [
            path: { "${params.outdir}/Intermediate_Outputs" },
            mode: params.publish_dir_mode,
			saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
		ext.prefix = "Trimmomatic-SPAdes"
    }
	
	withName: QUAST_BINS_CUTADAPT_MEGAHIT {
        publishDir = [
            path: { "${params.outdir}/Intermediate_Outputs" },
            mode: params.publish_dir_mode
        ]
    }
	
	withName: QUAST_BINS_SUMMARY_CUTADAPT_MEGAHIT {
        publishDir = [
            path: { "${params.outdir}/Intermediate_Outputs" },
            mode: params.publish_dir_mode,
			saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
		ext.prefix = "Cutadapt-MEGAHIT"
    }
	
	
	withName: QUAST_BINS_TRIMMOMATIC_MEGAHIT {
        publishDir = [
            path: { "${params.outdir}/Intermediate_Outputs" },
            mode: params.publish_dir_mode
        ]
    }
	
	withName: QUAST_BINS_SUMMARY_TRIMMOMATIC_MEGAHIT {
        publishDir = [
            path: { "${params.outdir}/Intermediate_Outputs" },
            mode: params.publish_dir_mode,
			saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
		ext.prefix = "Trimmomatic-MEGAHIT"
    }
	
	withName: METABAT2_CUTADAPT {
        publishDir = [
                path: { "${params.outdir}/Intermediate_Outputs/Binning/Cutadapt" },
                mode: params.publish_dir_mode,
                pattern: 'bins/*.fa.gz'
            ]
    }
	
	withName: METABAT2_TRIMMOMATIC {
        publishDir = [
                path: { "${params.outdir}/Intermediate_Outputs/Binning/Trimmomatic" },
                mode: params.publish_dir_mode,
                pattern: 'bins/*.fa.gz'
            ]
    }


	withName: 'MAG_DEPTHS_CUTADAPT' {
        publishDir = [
            pattern: false        
			]
    }
	
	withName: 'MAG_DEPTHS_TRIMMOMATIC' {
        publishDir = [
            pattern: false        
			]
	}
	
	withName: 'MAG_DEPTHS_SUMMARY_CUTADAPT_MEGAHIT' {
        publishDir = [
            path: "${params.outdir}/Intermediate_Outputs/Binning/Cutadapt"   
			]
			ext.prefix = "MEGAHIT-Cutadapt"
	}
	
	withName: 'MAG_DEPTHS_SUMMARY_CUTADAPT_SPADES' {
        publishDir = [
            path: "${params.outdir}/Intermediate_Outputs/Binning/Cutadapt"   
			]
			ext.prefix = "SPAdes-Cutadapt"
	}
	
	withName: 'MAG_DEPTHS_SUMMARY_TRIMMOMATIC_MEGAHIT' {
        publishDir = [
            path: "${params.outdir}/Intermediate_Outputs/Binning/Trimmomatic"   
			]
			ext.prefix = "MEGAHIT-Trimmomatic"
	}
	
	withName: 'MAG_DEPTHS_SUMMARY_TRIMMOMATIC_SPADES' {
        publishDir = [
            path: "${params.outdir}/Intermediate_Outputs/Binning/Trimmomatic"   
			]
			ext.prefix = "SPAdes-Trimmomatic"
	}
	
    withName: BIN_SUMMARY_CUTADAPT_SPADES {
        publishDir = [
            path: { "${params.outdir}/Intermediate_Outputs" },
            mode: params.publish_dir_mode
        ]
        ext.prefix = "Cutadapt_SPAdes"
    }	

    withName: BIN_SUMMARY_TRIMMOMATIC_SPADES {
        publishDir = [
            path: { "${params.outdir}/Intermediate_Outputs" },
            mode: params.publish_dir_mode
        ]
        ext.prefix = "Trimmomatic_SPAdes"
    }	

    withName: BIN_SUMMARY_CUTADAPT_MEGAHIT{
        publishDir = [
            path: { "${params.outdir}/Intermediate_Outputs" },
            mode: params.publish_dir_mode
        ]
        ext.prefix = "Cutadapt_MEGAHIT"
    }

    withName: BIN_SUMMARY_TRIMMOMATIC_MEGAHIT {
        publishDir = [
            path: { "${params.outdir}/Intermediate_Outputs" },
            mode: params.publish_dir_mode
        ]
        ext.prefix = "Trimmomatic_MEGAHIT"
    }	

    /*
    withName: SOURMASH_CUTADAPT_SPADES {
        publishDir = [
            path: { "${params.outdir}/Results/Sourmash" },
            mode: params.publish_dir_mode,
            pattern: "*.{csv,sig}"
        ]
    }
  
    withName: SOURMASH_TRIMMOMATIC_SPADES {
        publishDir = [
            path: { "${params.outdir}/Results/Sourmash" },
            mode: params.publish_dir_mode,
            pattern: "*.{csv,sig}"
        ]
    }	

    withName: SOURMASH_CUTADAPT_MEGAHIT {
        publishDir = [
            path: { "${params.outdir}/Results/Sourmash" },
            mode: params.publish_dir_mode,
            pattern: "*.{csv,sig}"
        ]
    }	

    withName: SOURMASH_TRIMMOMATIC_MEGAHIT {
        publishDir = [
            path: { "${params.outdir}/Results/Sourmash" },
            mode: params.publish_dir_mode,
            pattern: "*.{csv,sig}"
        ]
    }	

    withName: GTDBTK_CLASSIFY {
        ext.args   = "--extension fa"
        publishDir = [
            path: { "${params.outdir}/Results/GTDB-Tk" },
            mode: params.publish_dir_mode,
            pattern: "*.{log,tsv,tree.gz,fasta,fasta.gz}"
        ]
    }

    withName: GTDBTK_SUMMARY {
        ext.args   = "--extension fa"
        publishDir = [
            path: { "${params.outdir}/Results/GTDB-Tk" },
            mode: params.publish_dir_mode
        ]
    }


    withName: GTDBTK_CLASSIFY_CUTADAPT-SPADES {
        ext.args   = "--extension fa"
        publishDir = [
            path: { "${params.outdir}/Results/GTDB-Tk" },
            mode: params.publish_dir_mode,
            pattern: "*.{log,tsv,tree.gz,fasta,fasta.gz}"
        ]
    }

    withName: GTDBTK_CLASSIFY_TRIMMOMATIC-SPADES {
        ext.args   = "--extension fa"
        publishDir = [
            path: { "${params.outdir}/Results/GTDB-Tk" },
            mode: params.publish_dir_mode,
            pattern: "*.{log,tsv,tree.gz,fasta,fasta.gz}"
        ]
    }

    withName: GTDBTK_CLASSIFY_CUTADAPT-MEGAHIT {
        ext.args   = "--extension fa"
        publishDir = [
            path: { "${params.outdir}/Results/GTDB-Tk" },
            mode: params.publish_dir_mode,
            pattern: "*.{log,tsv,tree.gz,fasta,fasta.gz}"
        ]
    }

    withName: GTDBTK_CLASSIFY_TRIMMOMATIC-MEGAHIT {
        ext.args   = "--extension fa"
        publishDir = [
            path: { "${params.outdir}/Results/GTDB-Tk" },
            mode: params.publish_dir_mode,
            pattern: "*.{log,tsv,tree.gz,fasta,fasta.gz}"
        ]
    }

    withName: GTDBTK_SUMMARY_CUTADAPT-SPADES {
        ext.args   = "--extension fa"
        publishDir = [
            path: { "${params.outdir}/Results/GTDB-Tk" },
            mode: params.publish_dir_mode
        ]
        ext.prefix="SPAdes-Cutadapt"
    }
	
    withName: GTDBTK_SUMMARY_TRIMMOMATIC-SPADES {
        ext.args   = "--extension fa"
        publishDir = [
            path: { "${params.outdir}/Results/GTDB-Tk" },
            mode: params.publish_dir_mode
        ]
        ext.prefix="SPAdes-Trimmomatic"
    }

    withName: GTDBTK_SUMMARY_CUTADAPT-MEGAHIT {
        ext.args   = "--extension fa"
        publishDir = [
            path: { "${params.outdir}/Results/GTDB-Tk" },
            mode: params.publish_dir_mode
        ]
        ext.prefix="MEGAHIT-Cutadapt"
    }

    withName: GTDBTK_SUMMARY_TRIMMOMATIC-MEGAHIT {
        ext.args   = "--extension fa"
        publishDir = [
            path: { "${params.outdir}/Results/GTDB-Tk" },
            mode: params.publish_dir_mode
        ]
        ext.prefix="MEGAHIT-SPAdes"
    }
*/

	
}