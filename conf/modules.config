/*
========================================================================================
    Config file for defining DSL2 per module options
========================================================================================
    Available keys to override module options:
        args            = Additional arguments appended to command in module.
        args2           = Second set of arguments appended to command in module (multi-tool modules).
        args3           = Third set of arguments appended to command in module (multi-tool modules).
        publish_dir     = Directory to publish results.
        publish_by_meta = Groovy list of keys available in meta map to append as directories to "publish_dir" path
                            If publish_by_meta = true                 - Value of ${meta['id']} is appended as a directory to "publish_dir" path
                            If publish_by_meta = ['id', 'custompath'] - If "id" is in meta map and "custompath" isn't then "${meta['id']}/custompath/"
                                                                        is appended as a directory to "publish_dir" path
                            If publish_by_meta = false / null         - No directories are appended to "publish_dir" path
        publish_files   = Groovy map where key = "file_ext" and value = "directory" to publish results for that file extension
                            The value of "directory" is appended to the standard "publish_dir" path as defined above.
                            If publish_files = null (unspecified)     - All files are published.
                            If publish_files = false                  - No files are published.
        suffix          = File name suffix for output files.
----------------------------------------------------------------------------------------
*/

params {
    modules {
        'fastqc_raw' {
            args            = "--quiet"
            publish_files   = ['html':'', 'zip':'']
            publish_dir     = "Intermediate_Outputs/FastQC"
        }
        
        'cutadapt' {
            args            = "-q ${params.cutadapt_quality_cutoff} -m ${params.cutadapt_min_read_length} -e ${params.cutadapt_max_error_rate}"
            publish_files   = ['log':'']
            publish_by_meta = true
            publish_dir     = "Intermediate_Outputs/Cutadapt"
            suffix          = ".cutadapt"
	    }
        'trimmomatic' {
            args            = "ILLUMINACLIP:${params.trimmomatic_illuminaclip} SLIDINGWINDOW:${params.trimmomatic_sliding_window} MINLEN:${params.trimmomatic_min_length}"
            publish_files   = ['log':'']
            publish_by_meta = true
            publish_dir     = "Intermediate_Outputs/Trimmomatic"
            suffix          = ".trimmomatic"
	    }
	    'bowtie2_host_removal_align_cutadapt' {
            publish_files   = ['log':'', 'read_ids.txt':'']
            publish_dir     = "Intermediate_Outputs/Host Removal"
            suffix          = "host_removed"
        }
	    'bowtie2_host_removal_align_trimmomatic' {
            publish_files   = ['log':'', 'read_ids.txt':'']
            publish_dir     = "Intermediate_Outputs/Host Removal"
            suffix          = "host_removed"
        }
        'bowtie2_phix_removal_align_cutadapt' {
            publish_files   = ['log':'']
            publish_dir     = "Intermediate_Outputs/phiX Removal"
            suffix          = "phix_removed"
        }
	    'bowtie2_phix_removal_align_trimmomatic' {
            publish_files   = ['log':'']
            publish_dir     = "Intermediate_Outputs/phiX Removal"
            suffix          = "phix_removed"
        }
        'fastqc_trimmed_cutadapt' {
            args            = "--quiet"
            publish_files   = ['html':'']
            publish_dir     = "Intermediate_Outputs/FastQC"
            suffix          = "_cutadapt"
        }
	    'fastqc_trimmed_trimmomatic' {
            args            = "--quiet"
            publish_files   = ['html':'']
            publish_dir     = "Intermediate_Outputs/FastQC"
            suffix          = "_trimmomatic"
        }
        
        'kraken2_cutadapt' {
            publish_files   = ['txt':'']
            publish_by_meta = true
            publish_dir     = "Results/Kraken2/Cutadapt"
        }
	    'kraken2_trimmomatic' {
            publish_files   = ['txt':'']
            publish_by_meta = true
            publish_dir     = "Results/Kraken2/Trimmomatic"
        }
        'krona_cutadapt' {
            publish_files   = ['html':'']
            publish_by_meta = true
            publish_dir     = "Results/Krona/Cutadapt"
        }
	    'krona_trimmomatic' {
            publish_files   = ['html':'']
            publish_by_meta = true
            publish_dir     = "Results/Krona/Trimmomatic"
        }
        'megahit_cutadapt' {
            publish_files   = ['fa.gz':'', 'log':'']
            publish_dir     = "Intermediate_Outputs/MEGAHIT/Cutadapt"
        }
	    'megahit_trimmomatic' {
            publish_files   = ['fa.gz':'', 'log':'']
            publish_dir     = "Intermediate_Outputs/MEGAHIT/Trimmomatic"
        }
        'spades_cutadapt' {
            publish_files   = ['fasta.gz':'', 'gfa.gz':'', 'log':'']
            publish_dir     = "Intermediate_Outputs/SPAdes/Cutadapt"
        }
	    'spades_trimmomatic' {
            publish_files   = ['fasta.gz':'', 'gfa.gz':'', 'log':'']
            publish_dir     = "Intermediate_Outputs/SPAdes/Trimmomatic"
        }
        'spadeshybrid' {
            publish_files   = ['fasta.gz':'', 'gfa.gz':'', 'log':'']
            publish_dir     = "Intermediate_Outputs/SPAdesHybrid"
        }
        /*'spadeshybrid_trimmomatic' {
            publish_files   = ['fasta.gz':'', 'gfa.gz':'', 'log':'']
            publish_dir     = "Intermediate_Outputs/SPAdesHybrid/Trimmomatic"
        }*/
        'quast_cutadapt' {
            publish_by_meta = ['assembler', 'QC', 'id']
            publish_dir     = "Intermediate_Outputs"
	        suffix          = "cutadapt"
        }
	    'quast_trimmomatic' {
            publish_by_meta = ['assembler', 'QC', 'id']
            publish_dir     = "Intermediate_Outputs"
            suffix          = "trimmomatic"
        }
        'bowtie2_assembly_align' {
            publish_files   = ['log':'']
            publish_by_meta = ['assembler', 'QC', 'id']
            publish_dir     = "Intermediate_Outputs"
        }
        'metabat2_cutadapt' {
            publish_files   = ['txt.gz':'', 'fa':'', 'fa.gz':'']
            publish_dir     = "Intermediate_Outputs/Binning/Cutadapt"
        }
	    'metabat2_trimmomatic' {
            publish_files   = ['txt.gz':'', 'fa':'', 'fa.gz':'']
            publish_dir     = "Intermediate_Outputs/Binning/Trimmomatic"
        }
        'mag_depths_cutadapt' {
            publish_files   = false
        }
	    'mag_depths_trimmomatic' {
            publish_files   = false
        }
        'mag_depths_plot' {
            publish_dir     = "Intermediate_Outputs/Binning"
        }
        'mag_depths_summary_cutadapt_megahit' {
            publish_dir     = "Intermediate_Outputs/Binning/Cutadapt"
            suffix          = "MEGAHIT-Cutadapt"
        }
	    'mag_depths_summary_cutadapt_spades' {
            publish_dir     = "Intermediate_Outputs/Binning/Cutadapt"
            suffix          = "SPAdes-Cutadapt"
        }
	    'mag_depths_summary_trimmomatic_megahit' {
	        publish_dir     = "Intermediate_Outputs/Binning/Trimmomatic"
            suffix          = "MEGAHIT-Trimmomatic"
        }
	    'mag_depths_summary_trimmomatic_spades' {
            publish_dir     = "Intermediate_Outputs/Binning/Trimmomatic"
            suffix          = "SPAdes-Trimmomatic"
        }
        'busco_db_preparation' {
            publish_files   = ['tar.gz':'']
            publish_dir     = "Intermediate_Outputs/BUSCO"
        }
        'busco_cutadapt_spades' {
            publish_dir     = "Intermediate_Outputs/BUSCO/SPAdes"
        }
	    'busco_trimmomatic_spades' {
            publish_dir     = "Intermediate_Outputs/BUSCO/SPAdes"
        }
	    'busco_cutadapt_megahit' {
            publish_dir     = "Intermediate_Outputs/BUSCO/MEGAHIT"
        }
        'busco_trimmomatic_megahit' {
            publish_dir     = "Intermediate_Outputs/BUSCO/MEGAHIT"
        }
        'busco_save_download' {
            publish_dir     = "Intermediate_Outputs/BUSCO"
        }
        'busco_plot_cutadapt' {
            publish_dir     = "Intermediate_Outputs/BUSCO"
        }
	    'busco_plot_trimmomatic' {
            publish_dir     = "Intermediate_Outputs/BUSCO"
        }
        'busco_summary_cutadapt_megahit' {
            publish_dir     = "Intermediate_Outputs/BUSCO"
	        suffix          = "Cutadapt-MEGAHIT"
        }
	    'busco_summary_cutadapt_spades' {
            publish_dir     = "Intermediate_Outputs/BUSCO"
	        suffix          = "Cutadapt-SPAdes"
        }
	    'busco_summary_trimmomatic_megahit' {
            publish_dir     = "Intermediate_Outputs/BUSCO"
	        suffix          = "Trimmomatic-MEGAHIT"
        }
	    'busco_summary_trimmomatic_spades' {
            publish_dir     = "Intermediate_Outputs/BUSCO"
            suffix          = "Trimmomatic-SPAdes"
        }
        'quast_bins_cutadapt_spades' {
            publish_dir     = "Intermediate_Outputs/"
        }
        'quast_bins_summary_cutadapt_spades' {
            publish_dir     = "Intermediate_Outputs/"
	        suffix          = "Cutadapt-SPAdes"
        }
	    'quast_bins_trimmomatic_spades' {
            publish_dir     = "Intermediate_Outputs/"
        }
        'quast_bins_summary_trimmomatic_spades' {
            publish_dir     = "Intermediate_Outputs/"
	        suffix          = "Trimmomatic-SPAdes"
        }
	    'quast_bins_cutadapt_megahit' {
            publish_dir     = "Intermediate_Outputs/"
        }
        'quast_bins_summary_cutadapt_megahit' {
            publish_dir     = "Intermediate_Outputs/"
            suffix          = "Cutadapt-MEGAHIT"
        }
        'quast_bins_trimmomatic_megahit' {
            publish_dir     = "Intermediate_Outputs/"
        }
        'quast_bins_summary_trimmomatic_megahit' {
            publish_dir     = "Intermediate_Outputs/"
            suffix          = "Trimmomatic-MEGAHIT"
        }
	    'sourmash_cutadapt_spades'{
            publish_files   = ['csv':'', 'sig':'']
            publish_dir     = "Results/Sourmash"
        }
        'sourmash_trimmomatic_spades'{
            publish_files   = ['csv':'', 'sig':'']
            publish_dir     = "Results/Sourmash"
        }
        'sourmash_cutadapt_megahit'{
            publish_files   = ['csv':'', 'sig':'']
            publish_dir     = "Results/Sourmash"
        }
        'sourmash_trimmomatic_megahit'{
            publish_files   = ['csv':'', 'sig':'']
            publish_dir     = "Results/Sourmash"
        }
        'gtdbtk_classify' {
            args            = "--extension fa"
            publish_files   = ['log':'', 'tsv':'', 'tree.gz':'', 'fasta':'', 'fasta.gz':'']
            publish_by_meta = true
            publish_dir     = "Results/GTDB-Tk"
        }
	    /*'gtdbtk_summary' {
            args            = "--extension fa"
            publish_dir     = "Results/GTDB-Tk"
        }
	    'gtdbtk_summary_split' {
	        args            = "" 
	        publish_dir     = "Results/GTDB-Tk"
	    }*/
	    'gtdbtk_classify_cutadapt_spades' {
            args            = "--extension fa"
            publish_files   = ['log':'', 'tsv':'', 'tree.gz':'', 'fasta':'', 'fasta.gz':'']
            publish_by_meta = true
            publish_dir     = "Results/GTDB-Tk"
        }
	    'gtdbtk_classify_cutadapt_megahit' {
            args            = "--extension fa"
            publish_files   = ['log':'', 'tsv':'', 'tree.gz':'', 'fasta':'', 'fasta.gz':'']
            publish_by_meta = true
            publish_dir     = "Results/GTDB-Tk"
        }
	    'gtdbtk_classify_trimmomatic_spades' {
            args            = "--extension fa"
            publish_files   = ['log':'', 'tsv':'', 'tree.gz':'', 'fasta':'', 'fasta.gz':'']
            publish_by_meta = true
            publish_dir     = "Results/GTDB-Tk"
        }
	    'gtdbtk_classify_trimmomatic_megahit' {
            args            = "--extension fa"
            publish_files   = ['log':'', 'tsv':'', 'tree.gz':'', 'fasta':'', 'fasta.gz':'']
            publish_by_meta = true
            publish_dir     = "Results/GTDB-Tk"
        }
        'gtdbtk_summary_cutadapt_spades' {
            args            = "--extension fa"
            publish_dir     = "Results/GTDB-Tk"
	        suffix          = "SPAdes-Cutadapt"
        }
	    'gtdbtk_summary_cutadapt_megahit' {
            args            = "--extension fa"
            publish_dir     = "Results/GTDB-Tk"
	        suffix          = "MEGAHIT-Cutadapt"
        }
	    'gtdbtk_summary_trimmomatic_spades' {
            args            = "--extension fa"
            publish_dir     = "Results/GTDB-Tk"
	        suffix          = "SPAdes-Trimmomatic"
        }
	    'gtdbtk_summary_trimmomatic_megahit' {
            args            = "--extension fa"
            publish_dir     = "Results/GTDB-Tk"
	        suffix          = "MEGAHIT-Trimmomatic"
        }
        'bin_summary_cutadapt_spades' {
            publish_dir     = "Intermediate_Outputs"
	        suffix          = "Cutadapt_SPAdes"
        }
	    'bin_summary_trimmomatic_spades' {
            publish_dir     = "Intermediate_Outputs"
	        suffix          = "Trimmomatic_SPAdes"
        }
	    'bin_summary_cutadapt_megahit' {
            publish_dir     = "Intermediate_Outputs"
            suffix          = "Cutadapt_MEGAHIT"
        }
        'bin_summary_trimmomatic_megahit' {
            publish_dir     = "Intermediate_Outputs"
            suffix          = "Trimmomatic_MEGAHIT"
        }
        prokka {
            args            = "--metagenome"
            publish_dir     = "Results/Prokka"
            publish_by_meta = ['assembler']
        }
        'multiqc' {
            args            = ""
        }
        prodigal {
            args            = "-p meta"
            publish_dir     = "Results/Prodigal"
            output_format   = "gff"
            publish_by_meta = ['assembler', 'id']
        }
    }
}
